<style>
    .header {
        text-align: center;
        background-color: #000000;
        color: #ffffff;
        padding: 20px;
        font-family: Arial, Helvetica, sans-serif;
        font-size: 36px;
        letter-spacing: 2px;
        margin-bottom: 0;
        /* Removed margin-bottom to remove spacing between header and button */
    }

    body {
        background-color: #000000;
        overflow-y: auto;
        /* Add scroll when content overflows vertically */
    }

    #movie-trailer {
        width: 70%;
        /* Adjust as needed */
        height: 70%;
        /* Adjust as needed */
        border: none;
        display: block;
        margin: 0 auto;
    }

    #change-trailer {
        display: block;
        margin: 0 auto;
        /* Removed margin-bottom to remove spacing between header and button */
        padding: 10px 20px;
        background-color: #ffffff;
        color: #000000;
        border: 2px solid #ffffff;
        font-family: Arial, Helvetica, sans-serif;
        font-size: 16px;
        cursor: pointer;
        transition: background-color 0.3s, color 0.3s;
        border-radius: 10px;
    }

    #change-trailer:hover {
        background-color: #000000;
        color: #ffffff;
    }

    #movie-info {
        margin-top: 0;
        /* Removed margin-top to remove spacing between trailer and movie info */
        background-color: #000000;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
        font-family: Arial, Helvetica, sans-serif;
        color: #ffffff;
        text-align: center;
    }

    .movie-title-container {
        display: inline-flex;
        /* Change to inline-flex */
        align-items: center;
        /* Align items vertically in the center */
        border: 2px solid #ffffff;
        padding: 5px 10px;
    }

    #like-button {
        margin-left: 20px;
        background-color: #ffffff;
        color: #000000;
        border: 2px solid #707070;
        font-family: Arial, Helvetica, sans-serif;
        font-size: 16px;
        padding: 5px 15px;
        cursor: pointer;
        transition: background-color 0.3s, color 0.3s;
        border-radius: 10px;
    }

    #like-button:hover {
        background-color: #000000;
        color: #ffffff;
    }

    #movie-name {
        font-size: 32px;
        /* Adjust font size as needed */
        font-family: 'Arial Black', sans-serif;
        /* Use a bold font */
        margin: 0;
        /* Remove margin to avoid extra space */
    }

    #movie-info p {
        margin: 5px 0;
    }

    #movie-info p span {
        font-weight: bold;
    }
</style>

<div class="header">
    Grab your popcorn, and enjoy a stream of uninterrupted trailers!
</div>

<button id="change-trailer">Change Trailer</button>

<iframe id="movie-trailer" src="" allowfullscreen></iframe>

<div id="movie-info">
    <div class="movie-title-container">
        <h2 id="movie-name"></h2>
        <form id="like-form" method="POST" action="/likeMovie?movieID=">
            <button type="submit" id="like-button"></button>
        </form>
    </div>
    <p><span>Description:</span> <span id="movie-description"></span></p>
    <p><span>Year:</span> <span id="movie-year"></span></p>
    <p><span>Director:</span> <span id="movie-director"></span></p>
</div>

<script>
    // Parse the 'flix_data' JSON string to an array of objects
    const flixData = JSON.parse('{{{flix_data}}}'); 
    console.log(flixData);

    // Function to change the trailer being displayed
    function changeTrailer() {
        // Randomly select a video from 'flixData'
        const randomVideo = flixData[Math.floor(Math.random() * flixData.length)];
        // Check if the YouTube link is not empty
        if (randomVideo.youtube_link !== '') {
            // Set the 'src' attribute of the iframe to the selected video's YouTube link
            const iframe = document.getElementById('movie-trailer');
            iframe.src = randomVideo.youtube_link;
        } else {
            // If the YouTube link is empty, handle the situation (e.g., show an error message)
            console.error('No trailer available for this movie.');
            changeTrailer();
        }
        document.getElementById('movie-name').textContent = randomVideo.name;
        document.getElementById('movie-description').textContent = randomVideo.description;
        document.getElementById('movie-year').textContent = randomVideo.year;
        document.getElementById('movie-director').textContent = randomVideo.director;

        // Set the action attribute of the form with the movieID
        document.getElementById('like-form').action = `/likeMovie?movieID=${randomVideo.movie_id}`;

        // Update the like button text content based on whether the movie is liked or not
        const likeButton = document.getElementById('like-button');
        likeButton.textContent = randomVideo.liked ? 'Unlike' : 'Like';
    }

    // Change the trailer when the page loads
    changeTrailer();

    document.getElementById('change-trailer').addEventListener('click', changeTrailer);
</script>